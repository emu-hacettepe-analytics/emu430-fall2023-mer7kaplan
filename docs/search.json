[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Our Course Project",
    "section": "",
    "text": "I’m honored to be a member of the Data Cipher project team.\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to Data Cipher’s Project Lab."
  },
  {
    "objectID": "project.html#summary",
    "href": "project.html#summary",
    "title": "Our Course Project",
    "section": "Summary",
    "text": "Summary\n\nWe have chosen the Turkey Health Survey data from the Turkey Statistical Institute for our analysis. The Turkey Health Survey is a research project that aims to understand overall health and collect data on key health indicators to measure the development of the country. The study provides international comparisons and insights into national health needs. We selected the ‘Turkey Health Survey’ data set because it covers a wide range of health-related information in Turkey, including health habits, healthcare utilization, prevalent diseases, and demographic details. As a team, we aim to analyze health patterns across different gender and age groups, identify variations in health behaviors and disease occurrence, and understand health service utilization. Our ultimate goal is to provide valuable insights for health policies and activities."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "Twitter\n  \n  \n    \n     LinkedIn\n  \n  \n    \n     Instagram\n  \n  \n    \n     My Personal Repository\n  \n  \n    \n     Team Data Cipher Repository\n  \n\n  \n  \nHello, my name is Mert Bekir Kaplan. I’m thrilled to have you here, and I hope you’ll enjoy your time exploring the content I’ve created.\nThis is my personal webpage. Feel free to browse through the various sections and get to know me a little better. If you have any questions, want to connect, or share your thoughts, please don’t hesitate to reach out. Besides please stay tuned to follow my works on data analytics, blog posts, and more.\nThank you for visiting, and I hope you enjoy your time here.😊\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "My second assignment consists of four parts."
  },
  {
    "objectID": "assignments/assignment-2.html#section",
    "href": "assignments/assignment-2.html#section",
    "title": "Assignment 2",
    "section": "(1)",
    "text": "(1)\n\n\nShow the code\nurl1 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250\"\nurl2 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250\""
  },
  {
    "objectID": "assignments/assignment-2.html#section-1",
    "href": "assignments/assignment-2.html#section-1",
    "title": "Assignment 2",
    "section": "(2)",
    "text": "(2)\n\n\nShow the code\nsuppressPackageStartupMessages(library(tidyverse))\nlibrary(tidyverse)\ndetach(\"package:readr\", unload = TRUE)\nlibrary(rvest)\nlibrary(stringr)\nlibrary(knitr)\nlibrary(lubridate)\n\ntitle1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".ipc-title__text\") %&gt;%\n  html_text()\ntitle1 &lt;- tail(head(title1,-1),-1)\ntitle1 &lt;- str_split(title1, \" \", n=2)\ntitle1 &lt;- unlist(lapply(title1, function(x) {x[2]}))\n\ntitle2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".ipc-title__text\") %&gt;%\n  html_text()\ntitle2 &lt;- tail(head(title2,-1),-1)\ntitle2 &lt;- str_split(title2, \" \", n=2)\ntitle2 &lt;- unlist(lapply(title2, function(x) {x[2]}))\n\ntitle &lt;- c(title1, title2)\n\nyear1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(1)\") %&gt;%\n  html_text() %&gt;%\n  as.numeric()\n\nyear2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(1)\") %&gt;%\n  html_text() %&gt;%\n  as.numeric()\n\nyear &lt;- c(year1, year2)\n\nconvert_time &lt;- function(time_str) {\n  hours &lt;- 0\n  minutes &lt;- 0\n  \n  if (grepl(\"h\", time_str)) {\n    time_components &lt;- strsplit(time_str, \"h|m\")[[1]]\n    if (length(time_components) &gt;= 1) {\n      hours &lt;- as.numeric(time_components[1])\n    }\n    if (length(time_components) &gt;= 2) {\n      minutes &lt;- as.numeric(time_components[2])\n    }\n  } else {\n    minutes &lt;- as.numeric(gsub(\"m\", \"\", time_str))\n  }\n  \n  total_minutes &lt;- hours * 60 + minutes\n  return(total_minutes)\n}\n\nduration1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(2)\") %&gt;%\n  html_text()\nduration1 &lt;- unlist(lapply(duration1, convert_time))\n\nduration2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(2)\") %&gt;%\n  html_text()\nduration2 &lt;- unlist(lapply(duration2, convert_time))\n\nduration &lt;- c(duration1, duration2)\n\nrating1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".ratingGroup--imdb-rating\") %&gt;%\n  html_text()\nrating1 &lt;- str_extract(rating1, \"\\\\d+\\\\.\\\\d+\") %&gt;%\n  as.numeric()\n\nrating2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".ratingGroup--imdb-rating\") %&gt;%\n  html_text()\nrating2 &lt;- str_extract(rating2, \"\\\\d+\\\\.\\\\d+\") %&gt;%\n  as.numeric()\n\nrating &lt;- c(rating1, rating2)\n\nvotes1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".kRnqtn\") %&gt;%\n  html_text()\nvotes1 &lt;- gsub(\"\\\\D\", \"\", votes1) %&gt;%\n  as.numeric()\n\nvotes2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".kRnqtn\") %&gt;%\n  html_text()\nvotes2 &lt;- gsub(\"\\\\D\", \"\", votes2) %&gt;%\n  as.numeric()\n\nvotes &lt;- c(votes1, votes2)\n\nrm(title1, title2, year1, year2, duration1, duration2, rating1, rating2, votes1, votes2)  \nmovies &lt;- bind_cols(\n  title = title,\n  year = year,\n  duration = duration,\n  rating = rating,\n  votes = votes\n)\ncolnames(movies) &lt;- c(\"title\", \"year\", \"duration\", \"rating\", \"votes\")\n\nkable(\n  head(movies, 15),\n  format = \"html\",\n  caption = \"Turkish Movies from IMDb\",\n  col.names = c(\"Title\", \"Year\", \"Duration\", \"Rating\", \"Votes\")\n)\n\n\n\nTurkish Movies from IMDb\n\n\nTitle\nYear\nDuration\nRating\nVotes\n\n\n\n\nKuru Otlar Üstüne\n2023\n197\n8.1\n5067\n\n\nIstanbul Için Son Çagri\n2023\n91\n5.3\n7352\n\n\nYedinci Kogustaki Mucize\n2019\n132\n8.2\n54156\n\n\nÖlümlü Dünya 2\n2023\n117\n7.5\n3451\n\n\nBihter\n2023\n113\n3.6\n3345\n\n\nÖlümlü Dünya\n2018\n107\n7.6\n30260\n\n\nKis Uykusu\n2014\n196\n8.0\n54633\n\n\nDag II\n2016\n135\n8.2\n109866\n\n\nDo Not Disturb\n2023\n114\n6.3\n8769\n\n\nAyla: The Daughter of War\n2017\n125\n8.3\n42990\n\n\nKurak Günler\n2022\n129\n7.6\n11155\n\n\nAhlat Agaci\n2018\n188\n8.0\n27003\n\n\nBir Zamanlar Anadolu'da\n2011\n157\n7.8\n49354\n\n\nDabbe: Cin Çarpmasi\n2013\n134\n6.8\n7107\n\n\nBaskin\n2015\n97\n5.8\n12104"
  },
  {
    "objectID": "assignments/assignment-2.html#section-2",
    "href": "assignments/assignment-2.html#section-2",
    "title": "Assignment 2",
    "section": "(3)",
    "text": "(3)\n\nPart A)\n\n\nShow the code\nkable(\n  movies %&gt;%\n    arrange(desc(rating)) %&gt;%\n    head(5),\n  format = \"html\",\n  caption = \"Top 5 Movies based on Rating\",\n  col.names = c(\"Title\", \"Year\", \"Duration\", \"Rating\", \"Votes\")\n)\n\n\n\nTop 5 Movies based on Rating\n\n\nTitle\nYear\nDuration\nRating\nVotes\n\n\n\n\nHababam Sinifi\n1975\n87\n9.2\n42513\n\n\nCM101MMXI Fundamentals\n2013\n139\n9.1\n46995\n\n\nTosun Pasa\n1976\n90\n8.9\n24327\n\n\nHababam Sinifi Sinifta Kaldi\n1975\n95\n8.9\n24370\n\n\nSüt Kardesler\n1976\n80\n8.8\n20886\n\n\n\n\n\n\n\nShow the code\nkable(\n  movies %&gt;%\n    arrange(desc(rating)) %&gt;%\n    tail(5),\n  format = \"html\",\n  caption = \"Bottom 5 Movies based on Rating\",\n  col.names = c(\"Title\", \"Year\", \"Duration\", \"Rating\", \"Votes\")\n)\n\n\n\nBottom 5 Movies based on Rating\n\n\nTitle\nYear\nDuration\nRating\nVotes\n\n\n\n\nCumali Ceber 2\n2018\n100\n1.2\n10228\n\n\nMüjde\n2022\n48\n1.2\n9920\n\n\n15/07 Safak Vakti\n2021\n95\n1.2\n20607\n\n\nCumali Ceber: Allah Seni Alsin\n2017\n100\n1.0\n39267\n\n\nReis\n2017\n108\n1.0\n73973\n\n\n\n\n\n\n\n\nObviously, I have watched most of the Yeşilçam movies, and I think that some of them hold a truly unique place in my heart, which I genuinely appreciate. While most people may consider the ratings of these movies to be overrated, I’m not entirely in disagreement with that idea. However, I also believe that there is no doubt these films deserve the recognition they have received. The last five films in the list, some of which I have never heard before, are less familiar to me.\n\n\n\nPart B)\nHere are my top three favorite movies from that list.\n\n\nShow the code\nkable(\n  movies %&gt;%\n    filter(title == \"Müslüm\"),\n  format = \"html\",\n  caption = \"Number 1\",\n  col.names = c(\"Title\", \"Year\", \"Duration\", \"Rating\", \"Votes\")\n)\n\n\n\nNumber 1\n\n\nTitle\nYear\nDuration\nRating\nVotes\n\n\n\n\nMüslüm\n2018\n136\n7.6\n19953\n\n\n\n\n\n\n\n\n\nShow the code\nkable(\n  movies %&gt;%\n    filter(title == \"Yedinci Kogustaki Mucize\"),\n  format = \"html\",\n  caption = \"Number 2\",\n  col.names = c(\"Title\", \"Year\", \"Duration\", \"Rating\", \"Votes\")\n)\n\n\n\nNumber 2\n\n\nTitle\nYear\nDuration\nRating\nVotes\n\n\n\n\nYedinci Kogustaki Mucize\n2019\n132\n8.2\n54156\n\n\n\n\n\n\n\n\n\nShow the code\nkable(\n  movies %&gt;%\n    filter(title == \"Dag II\"),\n  format = \"html\",\n  caption = \"Number 3\",\n  col.names = c(\"Title\", \"Year\", \"Duration\", \"Rating\", \"Votes\")\n)\n\n\n\nNumber 3\n\n\nTitle\nYear\nDuration\nRating\nVotes\n\n\n\n\nDag II\n2016\n135\n8.2\n109866\n\n\n\n\n\n\n\n\n\nPart C)\n\n\nShow the code\nmovies %&gt;%\n  group_by(year) %&gt;%\n  summarize(rating_averages = mean(rating)) %&gt;%\n  ggplot(aes(year, rating_averages)) + geom_point() +\n  labs(x = \"Year\", y = \"Rating Averages\") +\n  ggtitle(\"Average Ratings of Turkish Movies Over the Years\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nThe plot clearly illustrates a decline in ratings over the years.\n\n\nShow the code\nggplot(movies, aes(x = factor(year))) +\n  geom_bar(fill = \"skyblue\", color = \"black\") +\n  labs(x = \"Year\", y = \"Number of Movies\") +\n  ggtitle(\"Number of Movies Over the Years\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 45, hjust = 1, size = 6),\n        axis.text.y = element_text(size = 8),\n        plot.title = element_text(size = 12, hjust = 0.5))\n\n\n\n\n\n\n\nShow the code\nmovies$year &lt;- as.factor(movies$year)\nggplot(movies, aes(x = year, y = rating, fill = factor(year))) +\n  geom_boxplot(color = \"black\", outlier.color = \"white\", notch = FALSE, notchwidth = 0.5, width = 0.6) +\n  labs(x = \"Year\", y = \"Rating\") +\n  ggtitle(\"Box Plots of Movie Ratings Over the Years\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 45, hjust = 1, size = 6),\n        axis.text.y = element_text(size = 8),\n        plot.title = element_text(size = 12, hjust = 0.5)) +\n  scale_x_discrete(labels = function(x) substr(x, 1, 4))\n\n\n\n\n\nOver the years, there has been a decline in the ratings, along with a noticeable and significant increase in the intervals between the ratings of the movies.\n\n\nPart D)\n\n\nShow the code\ncorrelation &lt;- cor(movies$votes, movies$rating)\ncat(\"Correlation between Votes and Ratings:\", correlation, \"\\n\")\n\n\nCorrelation between Votes and Ratings: 0.1307548 \n\n\nShow the code\nggplot(movies, aes(x = votes, y = rating, color = rating)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"brown\", formula = y ~ x) +\n  labs(x = \"Votes\", y = \"Rating\") +\n  ggtitle(\"Scatter Plot of Votes vs Rating\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nThe correlation between votes and ratings is weak, as shown by the coefficient of 0.1306267. This is also supported by the visual representation in the plot.\n\n\nPart E)\n\n\nShow the code\ncorrelation_duration_rating &lt;- cor(movies$duration, movies$rating)\ncat(\"Correlation between Duration and Ratings:\", correlation_duration_rating, \"\\n\")\n\n\nCorrelation between Duration and Ratings: 0.03343216 \n\n\nShow the code\nggplot(movies, aes(x = duration, y = rating, color = rating)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE, color = \"brown\", show.legend = FALSE) +\n  labs(x = \"Duration\", y = \"Rating\") +\n  ggtitle(\"Scatter Plot of Duration vs Rating\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_x_log10() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nThere is no correlation between votes and ratings, as indicated by the correlation coefficient of 0.03343216. This is also visible in the following plot."
  },
  {
    "objectID": "assignments/assignment-2.html#section-3",
    "href": "assignments/assignment-2.html#section-3",
    "title": "Assignment 2",
    "section": "(4)",
    "text": "(4)\n\n\nShow the code\nurl_top &lt;- \"https://m.imdb.com/search/title/?title_type=feature&groups=top_1000&country_of_origin=TR&count=250\"\n\ntitle_top &lt;- read_html(url_top) %&gt;%\n  html_elements(\".ipc-title__text\") %&gt;%\n  html_text()\ntitle_top &lt;- tail(head(title_top,-1),-1)\ntitle_top &lt;- str_split(title_top, \" \", n=2)\ntitle_top &lt;- unlist(lapply(title_top, function(x) {x[2]}))\n\nyear_top &lt;- read_html(url_top) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(1)\") %&gt;%\n  html_text() %&gt;%\n  as.numeric()\n\nmovies_top &lt;- bind_cols(title_top = title_top, year_top = year_top)\ncolnames(movies_top) &lt;- c(\"title\", \"year\")\n\nkable(\n  movies_top,\n  format = \"html\",\n  caption = \"Turkish Movies That are in the Top 1000 Movies on IMDb\",\n  col.names = c(\"Title\", \"Year\")\n)\n\n\n\nTurkish Movies That are in the Top 1000 Movies on IMDb\n\n\nTitle\nYear\n\n\n\n\nYedinci Kogustaki Mucize\n2019\n\n\nKis Uykusu\n2014\n\n\nNefes: Vatan Sagolsun\n2009\n\n\nAyla: The Daughter of War\n2017\n\n\nBabam ve Oglum\n2005\n\n\nAhlat Agaci\n2018\n\n\nBir Zamanlar Anadolu'da\n2011\n\n\nEskiya\n1996\n\n\nG.O.R.A.\n2004\n\n\nVizontele\n2001\n\n\nHer Sey Çok Güzel Olacak\n1998\n\n\n\n\n\n\n\n\n\nShow the code\nmovies &lt;- movies %&gt;% mutate(year = as.character(year))\nmovies_top &lt;- movies_top %&gt;% mutate(year = as.character(year))\n\nmovies_top_join &lt;- movies %&gt;%\n  inner_join(movies_top, by = c(\"title\", \"year\")) %&gt;%\n  arrange(desc(rating))\n\nkable(\n  movies_top_join,\n  format = \"html\",\n  caption = \"Turkish Movies That are in the Top 1000 Movies on IMDb Full Table\",\n  col.names = c(\"Title\", \"Year\", \"Duration\", \"Rating\", \"Votes\")\n)\n\n\n\nTurkish Movies That are in the Top 1000 Movies on IMDb Full Table\n\n\nTitle\nYear\nDuration\nRating\nVotes\n\n\n\n\nAyla: The Daughter of War\n2017\n125\n8.3\n42990\n\n\nYedinci Kogustaki Mucize\n2019\n132\n8.2\n54156\n\n\nBabam ve Oglum\n2005\n108\n8.2\n91026\n\n\nEskiya\n1996\n128\n8.1\n71699\n\n\nHer Sey Çok Güzel Olacak\n1998\n107\n8.1\n27119\n\n\nKis Uykusu\n2014\n196\n8.0\n54633\n\n\nAhlat Agaci\n2018\n188\n8.0\n27003\n\n\nNefes: Vatan Sagolsun\n2009\n128\n8.0\n35019\n\n\nG.O.R.A.\n2004\n127\n8.0\n66029\n\n\nVizontele\n2001\n110\n8.0\n38400\n\n\nBir Zamanlar Anadolu'da\n2011\n157\n7.8\n49354\n\n\n\n\n\n\n\n\n\nShow the code\nmovies &lt;- arrange(movies, desc(rating))\n\nkable(\n  head(movies, 11),\n  format = \"html\",\n  caption = \"Turkish Movies that are in the Top 11 based on Ratings\",\n  col.names = c(\"Title\", \"Year\", \"Duration\", \"Rating\", \"Votes\")\n)\n\n\n\nTurkish Movies that are in the Top 11 based on Ratings\n\n\nTitle\nYear\nDuration\nRating\nVotes\n\n\n\n\nHababam Sinifi\n1975\n87\n9.2\n42513\n\n\nCM101MMXI Fundamentals\n2013\n139\n9.1\n46995\n\n\nTosun Pasa\n1976\n90\n8.9\n24327\n\n\nHababam Sinifi Sinifta Kaldi\n1975\n95\n8.9\n24370\n\n\nSüt Kardesler\n1976\n80\n8.8\n20886\n\n\nSaban Oglu Saban\n1977\n90\n8.7\n18535\n\n\nZügürt Aga\n1985\n101\n8.7\n16134\n\n\nNeseli Günler\n1978\n95\n8.7\n11806\n\n\nKibar Feyzo\n1978\n83\n8.7\n17126\n\n\nHababam Sinifi Uyaniyor\n1976\n94\n8.7\n20640\n\n\nCanim Kardesim\n1973\n85\n8.6\n10096\n\n\n\n\n\n\n\n\nAs we can see from the table, these are not the same as the first 11 highest-rated movies in our initial data frame. Upon comparing both tables, the first thing we notice is the years of release for the movies, particularly the absence of older films in the TOP 1000 IMDB list. It is highly likely that they consider only movies released after a certain year."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Bachelor’s Degree, Industrial Engineering, Hacettepe University, Turkey, 2019 - ongoing."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Me",
    "section": "",
    "text": "Bachelor’s Degree, Industrial Engineering, Hacettepe University, Turkey, 2019 - ongoing."
  },
  {
    "objectID": "about.html#resume",
    "href": "about.html#resume",
    "title": "About Me",
    "section": "Resume",
    "text": "Resume\nClick here to view my resume."
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n Türk Traktör ve Ziraat Makineleri A.S., Production and Material Planning Department, 05/07/2023 - 02/08/2023\n Makine ve Kimya Endüstrisi A.S., Production Department, 21/08/2023 - 18/09/2023"
  },
  {
    "objectID": "about.html#competencies",
    "href": "about.html#competencies",
    "title": "About Me",
    "section": "Competencies",
    "text": "Competencies\n\n\n\nCompetency\nLevel\n\n\n\n\nMicrosoft Office\n███████████████████████\n\n\nPython\n███████\n\n\nR\n██████████\n\n\nMATLAB\n████████\n\n\nMinitab\n█████\n\n\nSolidWorks\n███████████████\n\n\nAutoCAD\n███████████\n\n\nArena\n██████\n\n\nGit\n██████\n\n\nQuarto\n███████"
  },
  {
    "objectID": "about.html#hobbies",
    "href": "about.html#hobbies",
    "title": "About Me",
    "section": "Hobbies",
    "text": "Hobbies\n\n\n\nWhat Keeps Me Buzzing\n\n\n\n\n\n🎥 Cinema\n🎳 Bowling\n\n\n🎱 Pool\n🎮 Video Games\n\n\n💪 Workout\n🃏 Poker\n\n\n♟️ Chess\n📚 Reading\n\n\n⚽ Soccer"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "My first assignment consists of three parts."
  },
  {
    "objectID": "assignments/assignment-1.html#a",
    "href": "assignments/assignment-1.html#a",
    "title": "Assignment 1",
    "section": "(a)",
    "text": "(a)\nHere is the video I chose for Part A. R vs Python | Which is Better for Data Analysis? The video mainly focuses on the comparison between R and Python.\n\nBrief Summary:\n\nIn this video, the presenter discusses whether Python or R is better for data analysis. Python is described as a versatile programming language, while R was initially made for statistics. The video talks about popular packages in both languages and mentions that Python is good for web applications and easy to learn, while R is better for advanced stats. The presenter suggests trying both to see which one works best for you, promoting an open-minded approach to this debate."
  },
  {
    "objectID": "assignments/assignment-1.html#b",
    "href": "assignments/assignment-1.html#b",
    "title": "Assignment 1",
    "section": "(b)",
    "text": "(b)\n\nDifferences Between R and Python:\n\nPython is a general-purpose programming language, while R was initially developed for statistical analysis.\nPopular packages in R include dplyr, ggplot2, and shiny, while Python offers libraries like pandas, matplotlib, and seaborn.\nPython is more versatile and suitable for web applications, but R excels in statistical analysis.\nPython is easier to learn, while R offers more advanced features.\n\n\n\nSyntax Example:\n\nWorking with data arrays\n\n# R\n# Create a vector:\nmy_vec &lt;- c(1, 2, 3, 4, 5, 6, 7, 8)\nstr(my_vec)\n\n num [1:8] 1 2 3 4 5 6 7 8\n\n\n\n# Python\n# Create a list:\nmy_vec = [1, 2, 3, 4, 5, 6, 7, 8]\nprint(type(my_vec))\n\n&lt;class 'list'&gt;\n\n\n\n\nDefining Functions\n\n# R\n#Define a function:\nmy_compare &lt;- function(x, y){\n  if(x &lt; y){\n    print(\"1st value is smaller\")\n  }else{\n    if(x &gt; y){\n      print(\"1st value is greater\")\n    }else{\n      print(\"Values are equal\")\n    }\n  }\n}\n#Test the function\nmy_compare(1, 1)\n\n[1] \"Values are equal\"\n\n\n\n# Python\n#Define a function:\ndef my_compare(x, y):\n  if x &lt; y:\n    print(\"1st value is smaller\")\n  elif x &gt; y:\n    print(\"1st value is greater\")\n  else:\n    print(\"Values are equal\")\n\n#Test the function\nmy_compare(1, 1)\n\nValues are equal"
  },
  {
    "objectID": "assignments/assignment-1.html#c",
    "href": "assignments/assignment-1.html#c",
    "title": "Assignment 1",
    "section": "(c)",
    "text": "(c)\n\nlibrary(dslabs)\ndata(\"na_example\")\nna_example\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\n# Total number of NAs in the data frame:\nsum(is.na(na_example))\n\n[1] 145\n\nno_na_example &lt;- ifelse(is.na(na_example), 0, na_example)\nno_na_example\n\n   [1] 2 1 3 2 1 3 1 4 3 2 2 0 2 2 1 4 0 1 1 2 1 2 2 1 2 5 0 2 2 3 1 2 4 1 1 1 4\n  [38] 5 2 3 4 1 2 4 1 1 2 1 5 0 0 0 1 1 5 1 3 1 0 4 4 7 3 2 0 0 1 0 4 1 2 2 3 2\n  [75] 1 2 2 4 3 4 2 3 1 3 2 1 1 1 3 1 0 3 1 2 2 1 2 2 1 1 4 1 1 2 3 3 2 2 3 3 3\n [112] 4 1 1 1 2 0 4 3 4 3 1 2 1 0 0 0 0 1 5 1 2 1 3 5 3 2 2 0 0 0 0 3 5 3 1 1 4\n [149] 2 4 3 3 0 2 3 2 6 0 1 1 2 2 1 3 1 1 5 0 0 2 4 0 2 5 1 4 3 3 0 4 3 1 4 1 1\n [186] 3 1 1 0 0 3 5 2 2 2 3 1 2 2 3 2 1 0 2 0 1 0 0 2 1 1 0 3 0 1 2 2 1 3 2 2 1\n [223] 1 2 3 1 1 1 4 3 4 2 2 1 4 1 0 5 1 4 0 3 0 0 1 1 5 2 3 3 2 4 0 3 2 5 0 2 3\n [260] 4 6 2 2 2 0 2 0 2 0 3 3 2 2 4 3 1 4 2 0 2 4 0 6 2 3 1 0 2 2 0 1 1 3 2 3 3\n [297] 1 0 1 4 2 1 1 3 2 1 2 3 1 0 2 3 3 2 1 2 3 5 5 1 2 3 3 1 0 0 1 2 4 0 2 1 1\n [334] 1 3 2 1 1 3 4 0 1 2 1 1 3 3 0 1 1 3 5 3 2 3 4 1 4 3 1 0 2 1 2 2 1 2 2 6 1\n [371] 2 4 5 0 3 4 2 1 1 4 2 1 1 1 1 2 1 4 4 1 3 0 3 3 0 2 0 1 2 1 1 4 2 1 4 4 0\n [408] 1 2 0 3 2 2 2 1 4 3 6 1 2 3 1 3 2 2 2 1 1 3 2 1 1 1 3 2 2 0 4 4 4 1 1 0 4\n [445] 3 0 1 3 1 3 2 4 2 2 2 3 2 1 4 3 0 1 4 3 1 3 2 0 3 0 1 3 1 4 1 1 1 2 4 3 1\n [482] 2 2 2 3 2 3 1 1 0 3 2 1 1 2 0 2 2 2 3 3 1 1 2 0 1 2 1 1 3 3 1 3 1 1 1 1 1\n [519] 2 5 1 1 2 2 1 1 0 1 4 1 2 4 1 3 2 0 1 1 0 2 1 1 4 2 3 3 1 5 3 1 1 2 0 1 1\n [556] 3 1 3 2 4 0 2 3 2 1 2 1 1 1 2 2 3 1 5 2 0 2 0 3 2 2 2 1 5 3 2 3 1 0 3 1 2\n [593] 2 2 1 2 2 4 0 6 1 2 0 1 1 2 2 3 0 3 2 3 3 4 2 0 2 0 4 0 1 1 2 2 3 1 1 1 3\n [630] 0 2 5 0 7 1 0 4 3 3 1 0 1 1 1 1 3 2 4 2 2 3 0 0 1 4 3 2 2 2 3 2 4 2 2 4 0\n [667] 0 0 6 3 3 1 4 4 2 1 0 1 6 0 3 3 2 1 1 6 0 1 5 1 0 2 6 2 0 4 1 3 1 2 0 1 1\n [704] 3 1 2 4 2 1 3 2 4 3 2 2 1 1 5 6 4 2 2 2 2 4 0 1 2 2 2 2 4 5 0 0 0 4 3 3 3\n [741] 2 4 2 4 0 0 0 0 2 1 0 2 4 3 2 0 2 3 1 3 4 0 1 2 1 2 0 3 1 2 1 2 1 2 1 2 2\n [778] 2 2 1 1 3 3 1 3 4 3 0 0 4 2 3 2 1 3 2 4 2 2 3 1 2 4 3 3 4 0 1 4 2 1 1 1 3\n [815] 1 5 2 2 4 2 0 1 3 1 2 0 1 2 1 2 1 0 1 3 2 3 2 0 2 1 4 2 0 0 0 2 4 2 0 0 3\n [852] 1 0 5 5 2 2 2 0 2 1 3 1 3 2 4 2 4 0 4 1 2 3 2 3 3 2 3 2 2 2 1 3 2 4 2 0 3\n [889] 3 2 2 0 0 3 2 1 2 4 1 1 1 1 4 3 2 0 3 2 0 1 0 3 2 1 1 1 2 0 2 2 3 3 2 0 0\n [926] 4 5 2 2 2 1 2 3 1 3 3 4 3 0 1 1 1 0 4 3 5 1 1 2 0 2 2 2 2 5 2 2 3 1 2 3 0\n [963] 1 2 0 0 2 0 3 1 1 2 5 3 5 1 1 4 0 2 1 3 1 1 2 4 3 3 3 0 1 1 2 2 1 1 2 2 0\n[1000] 2\n\n# Total number of NAs in the new data frame:\nsum(is.na(no_na_example))\n\n[1] 0"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the Fall 2023 EMU 430 Data Analytics course.\nPlease use left menu to navigate through my assignments.\nThe most recent update to this page was made on December 28, 2023\n\n\n\n Back to top"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  }
]